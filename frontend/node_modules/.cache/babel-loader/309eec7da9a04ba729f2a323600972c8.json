{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Code\\\\Projects\\\\piano-teacher\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { gql } from \"@apollo/client\";\nexport var client = new ApolloClient({\n  uri: \"\".concat(process.env.REACT_APP_URL, \"/graphql\") || \"http://192.168.1.64:1337/graphql\",\n  cache: new InMemoryCache()\n});\nexport var GET_SLUGS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query {\\n    posts {\\n      id\\n      slug\\n    }\\n  }\\n\"])));\nexport var GET_POST = function GET_POST(id) {\n  return gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\nquery {\\n  post(id: \", \") {\\n    title\\n    content\\n    created_at\\n    image {\\n      url\\n    }\\n  }\\n}\\n\"])), id);\n};\nexport var GET_POSTS = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query Posts($limit: Int, $start: Int) {\\n    posts(sort: \\\"id:desc\\\", limit: $limit, start: $start) {\\n      id\\n      slug\\n      title\\n      content\\n      created_at\\n      image {\\n        url\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["D:/Code/Projects/piano-teacher/frontend/src/apollo/index.js"],"names":["ApolloClient","InMemoryCache","gql","client","uri","process","env","REACT_APP_URL","cache","GET_SLUGS","GET_POST","id","GET_POSTS"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAO,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AACrCI,EAAAA,GAAG,EACD,UAAGC,OAAO,CAACC,GAAR,CAAYC,aAAf,iBACA,kCAHmC;AAIrCC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAJ8B,CAAjB,CAAf;AAOP,OAAO,IAAMQ,SAAS,GAAGP,GAAH,iIAAf;AASP,OAAO,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAAAC,EAAE;AAAA,SAAIT,GAAJ,sLAEbS,EAFa;AAAA,CAAnB;AAaP,OAAO,IAAMC,SAAS,GAAGV,GAAH,uSAAf","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nexport const client = new ApolloClient({\r\n  uri:\r\n    `${process.env.REACT_APP_URL}/graphql` ||\r\n    \"http://192.168.1.64:1337/graphql\",\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport const GET_SLUGS = gql`\r\n  query {\r\n    posts {\r\n      id\r\n      slug\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POST = id => gql`\r\nquery {\r\n  post(id: ${id}) {\r\n    title\r\n    content\r\n    created_at\r\n    image {\r\n      url\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_POSTS = gql`\r\n  query Posts($limit: Int, $start: Int) {\r\n    posts(sort: \"id:desc\", limit: $limit, start: $start) {\r\n      id\r\n      slug\r\n      title\r\n      content\r\n      created_at\r\n      image {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}