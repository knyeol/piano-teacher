{"ast":null,"code":"import _slicedToArray from \"D:\\\\Code\\\\Projects\\\\piano-teacher\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Code\\\\Projects\\\\piano-teacher\\\\frontend\\\\src\\\\components\\\\Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_POST } from \"../apollo/\";\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\n\nfunction Post(_ref) {\n  var _this = this;\n\n  var id = _ref.id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var _useQuery = useQuery(GET_POST(id)),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  function formatDate(date) {\n    var _date$split = date.split(\"-\"),\n        _date$split2 = _slicedToArray(_date$split, 3),\n        year = _date$split2[0],\n        month = _date$split2[1],\n        day = _date$split2[2];\n\n    var newDate = new Date(year, month - 1, day);\n    var format = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    };\n    return Intl.DateTimeFormat(\"en-US\", format).format(newDate);\n  }\n\n  useEffect(function () {\n    console.log(error);\n  }, [error]);\n  useEffect(function () {\n    if (!data) return;\n    setContent(data.post.content.split(\"\\n\"));\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"content-container\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, data && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section-title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, data.post.title), formatDate(data.post.created_at.split(\"T\")[0]), /*#__PURE__*/React.createElement(\"img\", {\n    is: \"lazyload-image\",\n    src: \"\".concat(data.post.image.url),\n    alt: \"piano\",\n    height: data.post.image.url.height,\n    width: data.post.image.url.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), content && content.map(function (content, i) {\n    return content && /*#__PURE__*/React.createElement(\"blog-paragraph\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }\n    }, content);\n  }), /*#__PURE__*/React.createElement(\"card-title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaLongArrowAltLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), \"\\u2002Return\"))));\n}\n\nexport default Post;","map":{"version":3,"sources":["D:/Code/Projects/piano-teacher/frontend/src/components/Post.js"],"names":["React","useState","useEffect","useQuery","GET_POST","FaLongArrowAltLeft","Post","id","content","setContent","loading","error","data","formatDate","date","split","year","month","day","newDate","Date","format","Intl","DateTimeFormat","console","log","post","title","created_at","image","url","height","width","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_POST } from \"../apollo/\";\r\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\r\n\r\nfunction Post({ id }) {\r\n  const [content, setContent] = useState();\r\n  const { loading, error, data } = useQuery(GET_POST(id));\r\n\r\n  function formatDate(date) {\r\n    const [year, month, day] = date.split(\"-\");\r\n    const newDate = new Date(year, month - 1, day);\r\n    const format = {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"2-digit\"\r\n    };\r\n    return Intl.DateTimeFormat(\"en-US\", format).format(newDate);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(error);\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    setContent(data.post.content.split(\"\\n\"));\r\n  }, [data]);\r\n\r\n  return (\r\n    <content-container>\r\n      {data && (\r\n        <>\r\n          <section-title>{data.post.title}</section-title>\r\n          {formatDate(data.post.created_at.split(\"T\")[0])}\r\n          <img\r\n            is=\"lazyload-image\"\r\n            src={`${data.post.image.url}`}\r\n            alt=\"piano\"\r\n            height={data.post.image.url.height}\r\n            width={data.post.image.url.width}\r\n          />\r\n          {content &&\r\n            content.map(\r\n              (content, i) =>\r\n                content && <blog-paragraph key={i}>{content}</blog-paragraph>\r\n            )}\r\n          <card-title>\r\n            <a href=\"/blog\">\r\n              <FaLongArrowAltLeft />\r\n              &ensp;Return\r\n            </a>\r\n          </card-title>\r\n        </>\r\n      )}\r\n    </content-container>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}